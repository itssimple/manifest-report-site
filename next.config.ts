import type { NextConfig } from "next";
import { execSync } from "child_process";
import fs from "fs";
import path from "path";

function getGitHash() {
    try {
        // Get short git hash
        return execSync("git rev-parse --short HEAD").toString().trim();
    } catch (error) {
        console.warn("Failed to get git hash:", error);
        return "unknown";
    }
}

const nextConfig: NextConfig = {
    staticPageGenerationTimeout: 3600,
    images: {
        unoptimized: false,
        remotePatterns: [
            {
                protocol: "https",
                hostname: "www.bungie.net",
                port: "",
            },
            {
                protocol: "https",
                hostname: "images.contentstack.io",
                port: "",
            },
        ],
    },
    generateBuildId: async () => {
        const gitHash = getGitHash();

        // Fetch the current UTC time in the format YYYYMMDD-HHMM
        const date = new Date().toISOString().replace(/[-:]/g, "").slice(0, 13);

        const buildConstants = `
// THIS FILE IS AUTO-GENERATED
// DO NOT EDIT THIS FILE DIRECTLY
// BUILD_ID: ${gitHash}
// BUILD_DATE: ${date}
// BUILD_VERSION: ${process.env.DEPLOY_VERSION}

export const BUILD_ID = "${gitHash}";
export const BUILD_DATE = "${date}";
`;

        fs.writeFileSync(
            path.join(process.cwd(), "src", "buildConstants.ts"),
            buildConstants,
            { encoding: "utf-8" }
        );

        return gitHash;
    },
};

export default nextConfig;
